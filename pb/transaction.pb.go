// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/transaction.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Transaction_Source int32

const (
	Transaction_SOURCE_UNKNOWN   Transaction_Source = 0
	Transaction_SOURCE_PF        Transaction_Source = 1
	Transaction_SOURCE_MYCRM     Transaction_Source = 2
	Transaction_SOURCE_PROPSPACE Transaction_Source = 3
	Transaction_SOURCE_DLD       Transaction_Source = 4
)

var Transaction_Source_name = map[int32]string{
	0: "SOURCE_UNKNOWN",
	1: "SOURCE_PF",
	2: "SOURCE_MYCRM",
	3: "SOURCE_PROPSPACE",
	4: "SOURCE_DLD",
}

var Transaction_Source_value = map[string]int32{
	"SOURCE_UNKNOWN":   0,
	"SOURCE_PF":        1,
	"SOURCE_MYCRM":     2,
	"SOURCE_PROPSPACE": 3,
	"SOURCE_DLD":       4,
}

func (x Transaction_Source) String() string {
	return proto.EnumName(Transaction_Source_name, int32(x))
}

func (Transaction_Source) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_489dcea0c2b7da12, []int{2, 0}
}

type Transaction_Type int32

const (
	Transaction_TYPE_UNKNOWN  Transaction_Type = 0
	Transaction_TYPE_LISTING  Transaction_Type = 1
	Transaction_TYPE_MOU      Transaction_Type = 2
	Transaction_TYPE_OFFICIAL Transaction_Type = 3
)

var Transaction_Type_name = map[int32]string{
	0: "TYPE_UNKNOWN",
	1: "TYPE_LISTING",
	2: "TYPE_MOU",
	3: "TYPE_OFFICIAL",
}

var Transaction_Type_value = map[string]int32{
	"TYPE_UNKNOWN":  0,
	"TYPE_LISTING":  1,
	"TYPE_MOU":      2,
	"TYPE_OFFICIAL": 3,
}

func (x Transaction_Type) String() string {
	return proto.EnumName(Transaction_Type_name, int32(x))
}

func (Transaction_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_489dcea0c2b7da12, []int{2, 1}
}

type Transaction_Furnishing int32

const (
	Transaction_UNKNOWN_FURNISHING Transaction_Furnishing = 0
	Transaction_UNFURNISHED        Transaction_Furnishing = 1
	Transaction_SEMI_FURNISHED     Transaction_Furnishing = 2
	Transaction_FULLY_FURNISHED    Transaction_Furnishing = 3
)

var Transaction_Furnishing_name = map[int32]string{
	0: "UNKNOWN_FURNISHING",
	1: "UNFURNISHED",
	2: "SEMI_FURNISHED",
	3: "FULLY_FURNISHED",
}

var Transaction_Furnishing_value = map[string]int32{
	"UNKNOWN_FURNISHING": 0,
	"UNFURNISHED":        1,
	"SEMI_FURNISHED":     2,
	"FULLY_FURNISHED":    3,
}

func (x Transaction_Furnishing) String() string {
	return proto.EnumName(Transaction_Furnishing_name, int32(x))
}

func (Transaction_Furnishing) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_489dcea0c2b7da12, []int{2, 2}
}

type CreateTransactionRequest struct {
	Transaction          *Transaction `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CreateTransactionRequest) Reset()         { *m = CreateTransactionRequest{} }
func (m *CreateTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTransactionRequest) ProtoMessage()    {}
func (*CreateTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_489dcea0c2b7da12, []int{0}
}

func (m *CreateTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTransactionRequest.Unmarshal(m, b)
}
func (m *CreateTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTransactionRequest.Marshal(b, m, deterministic)
}
func (m *CreateTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTransactionRequest.Merge(m, src)
}
func (m *CreateTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTransactionRequest.Size(m)
}
func (m *CreateTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTransactionRequest proto.InternalMessageInfo

func (m *CreateTransactionRequest) GetTransaction() *Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

type CreateTransactionResponse struct {
	Transaction          *Transaction `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CreateTransactionResponse) Reset()         { *m = CreateTransactionResponse{} }
func (m *CreateTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*CreateTransactionResponse) ProtoMessage()    {}
func (*CreateTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_489dcea0c2b7da12, []int{1}
}

func (m *CreateTransactionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTransactionResponse.Unmarshal(m, b)
}
func (m *CreateTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTransactionResponse.Marshal(b, m, deterministic)
}
func (m *CreateTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTransactionResponse.Merge(m, src)
}
func (m *CreateTransactionResponse) XXX_Size() int {
	return xxx_messageInfo_CreateTransactionResponse.Size(m)
}
func (m *CreateTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTransactionResponse proto.InternalMessageInfo

func (m *CreateTransactionResponse) GetTransaction() *Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

type Transaction struct {
	Date               uint64                 `protobuf:"varint,1,opt,name=date,proto3" json:"date,omitempty"`
	ExternalId         uint64                 `protobuf:"varint,2,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	Source             Transaction_Source     `protobuf:"varint,3,opt,name=source,proto3,enum=pb.Transaction_Source" json:"source,omitempty"`
	Type               Transaction_Type       `protobuf:"varint,4,opt,name=type,proto3,enum=pb.Transaction_Type" json:"type,omitempty"`
	PropertyReference  string                 `protobuf:"bytes,7,opt,name=property_reference,json=propertyReference,proto3" json:"property_reference,omitempty"`
	Price              float64                `protobuf:"fixed64,8,opt,name=price,proto3" json:"price,omitempty"`
	VerificationStatus string                 `protobuf:"bytes,9,opt,name=verification_status,json=verificationStatus,proto3" json:"verification_status,omitempty"`
	RejectionReason    string                 `protobuf:"bytes,10,opt,name=rejection_reason,json=rejectionReason,proto3" json:"rejection_reason,omitempty"`
	VerifiedAt         uint64                 `protobuf:"varint,11,opt,name=verified_at,json=verifiedAt,proto3" json:"verified_at,omitempty"`
	Furnishing         Transaction_Furnishing `protobuf:"varint,12,opt,name=furnishing,proto3,enum=pb.Transaction_Furnishing" json:"furnishing,omitempty"`
	DeveloperName      string                 `protobuf:"bytes,13,opt,name=developer_name,json=developerName,proto3" json:"developer_name,omitempty"`
	ChequeCount        uint64                 `protobuf:"varint,14,opt,name=cheque_count,json=chequeCount,proto3" json:"cheque_count,omitempty"`
	BedroomCount       uint64                 `protobuf:"varint,15,opt,name=bedroom_count,json=bedroomCount,proto3" json:"bedroom_count,omitempty"`
	BathroomCount      uint64                 `protobuf:"varint,16,opt,name=bathroom_count,json=bathroomCount,proto3" json:"bathroom_count,omitempty"`
	BuiltUpArea        float64                `protobuf:"fixed64,17,opt,name=built_up_area,json=builtUpArea,proto3" json:"built_up_area,omitempty"`
	PlotSize           float64                `protobuf:"fixed64,18,opt,name=plot_size,json=plotSize,proto3" json:"plot_size,omitempty"`
	UnitNumber         string                 `protobuf:"bytes,19,opt,name=unit_number,json=unitNumber,proto3" json:"unit_number,omitempty"`
	FloorLevel         string                 `protobuf:"bytes,20,opt,name=floor_level,json=floorLevel,proto3" json:"floor_level,omitempty"`
	Location           *Location              `protobuf:"bytes,21,opt,name=location,proto3" json:"location,omitempty"`
	PropertyType       string                 `protobuf:"bytes,22,opt,name=property_type,json=propertyType,proto3" json:"property_type,omitempty"`
	Seller             *Party                 `protobuf:"bytes,23,opt,name=seller,proto3" json:"seller,omitempty"`
	Buyer              *Party                 `protobuf:"bytes,24,opt,name=buyer,proto3" json:"buyer,omitempty"`
	Landlord           *Party                 `protobuf:"bytes,25,opt,name=landlord,proto3" json:"landlord,omitempty"`
	Tenant             *Party                 `protobuf:"bytes,26,opt,name=tenant,proto3" json:"tenant,omitempty"`
	IsChillerInclusive bool                   `protobuf:"varint,27,opt,name=is_chiller_inclusive,json=isChillerInclusive,proto3" json:"is_chiller_inclusive,omitempty"`
	HasStudyRoom       bool                   `protobuf:"varint,28,opt,name=has_study_room,json=hasStudyRoom,proto3" json:"has_study_room,omitempty"`
	HasMaidRoom        bool                   `protobuf:"varint,29,opt,name=has_maid_room,json=hasMaidRoom,proto3" json:"has_maid_room,omitempty"`
	Views              []string               `protobuf:"bytes,30,rep,name=views,proto3" json:"views,omitempty"`
	ProjectStatus      string                 `protobuf:"bytes,31,opt,name=project_status,json=projectStatus,proto3" json:"project_status,omitempty"`
	ContractDuration   string                 `protobuf:"bytes,32,opt,name=contract_duration,json=contractDuration,proto3" json:"contract_duration,omitempty"`
	// Types that are valid to be assigned to Commission:
	//	*Transaction_CommissionFixed
	//	*Transaction_CommissionPercentage
	Commission           isTransaction_Commission `protobuf_oneof:"commission"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}
func (*Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_489dcea0c2b7da12, []int{2}
}

func (m *Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction.Unmarshal(m, b)
}
func (m *Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction.Marshal(b, m, deterministic)
}
func (m *Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction.Merge(m, src)
}
func (m *Transaction) XXX_Size() int {
	return xxx_messageInfo_Transaction.Size(m)
}
func (m *Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction proto.InternalMessageInfo

func (m *Transaction) GetDate() uint64 {
	if m != nil {
		return m.Date
	}
	return 0
}

func (m *Transaction) GetExternalId() uint64 {
	if m != nil {
		return m.ExternalId
	}
	return 0
}

func (m *Transaction) GetSource() Transaction_Source {
	if m != nil {
		return m.Source
	}
	return Transaction_SOURCE_UNKNOWN
}

func (m *Transaction) GetType() Transaction_Type {
	if m != nil {
		return m.Type
	}
	return Transaction_TYPE_UNKNOWN
}

func (m *Transaction) GetPropertyReference() string {
	if m != nil {
		return m.PropertyReference
	}
	return ""
}

func (m *Transaction) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Transaction) GetVerificationStatus() string {
	if m != nil {
		return m.VerificationStatus
	}
	return ""
}

func (m *Transaction) GetRejectionReason() string {
	if m != nil {
		return m.RejectionReason
	}
	return ""
}

func (m *Transaction) GetVerifiedAt() uint64 {
	if m != nil {
		return m.VerifiedAt
	}
	return 0
}

func (m *Transaction) GetFurnishing() Transaction_Furnishing {
	if m != nil {
		return m.Furnishing
	}
	return Transaction_UNKNOWN_FURNISHING
}

func (m *Transaction) GetDeveloperName() string {
	if m != nil {
		return m.DeveloperName
	}
	return ""
}

func (m *Transaction) GetChequeCount() uint64 {
	if m != nil {
		return m.ChequeCount
	}
	return 0
}

func (m *Transaction) GetBedroomCount() uint64 {
	if m != nil {
		return m.BedroomCount
	}
	return 0
}

func (m *Transaction) GetBathroomCount() uint64 {
	if m != nil {
		return m.BathroomCount
	}
	return 0
}

func (m *Transaction) GetBuiltUpArea() float64 {
	if m != nil {
		return m.BuiltUpArea
	}
	return 0
}

func (m *Transaction) GetPlotSize() float64 {
	if m != nil {
		return m.PlotSize
	}
	return 0
}

func (m *Transaction) GetUnitNumber() string {
	if m != nil {
		return m.UnitNumber
	}
	return ""
}

func (m *Transaction) GetFloorLevel() string {
	if m != nil {
		return m.FloorLevel
	}
	return ""
}

func (m *Transaction) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *Transaction) GetPropertyType() string {
	if m != nil {
		return m.PropertyType
	}
	return ""
}

func (m *Transaction) GetSeller() *Party {
	if m != nil {
		return m.Seller
	}
	return nil
}

func (m *Transaction) GetBuyer() *Party {
	if m != nil {
		return m.Buyer
	}
	return nil
}

func (m *Transaction) GetLandlord() *Party {
	if m != nil {
		return m.Landlord
	}
	return nil
}

func (m *Transaction) GetTenant() *Party {
	if m != nil {
		return m.Tenant
	}
	return nil
}

func (m *Transaction) GetIsChillerInclusive() bool {
	if m != nil {
		return m.IsChillerInclusive
	}
	return false
}

func (m *Transaction) GetHasStudyRoom() bool {
	if m != nil {
		return m.HasStudyRoom
	}
	return false
}

func (m *Transaction) GetHasMaidRoom() bool {
	if m != nil {
		return m.HasMaidRoom
	}
	return false
}

func (m *Transaction) GetViews() []string {
	if m != nil {
		return m.Views
	}
	return nil
}

func (m *Transaction) GetProjectStatus() string {
	if m != nil {
		return m.ProjectStatus
	}
	return ""
}

func (m *Transaction) GetContractDuration() string {
	if m != nil {
		return m.ContractDuration
	}
	return ""
}

type isTransaction_Commission interface {
	isTransaction_Commission()
}

type Transaction_CommissionFixed struct {
	CommissionFixed float64 `protobuf:"fixed64,33,opt,name=commission_fixed,json=commissionFixed,proto3,oneof"`
}

type Transaction_CommissionPercentage struct {
	CommissionPercentage float64 `protobuf:"fixed64,34,opt,name=commission_percentage,json=commissionPercentage,proto3,oneof"`
}

func (*Transaction_CommissionFixed) isTransaction_Commission() {}

func (*Transaction_CommissionPercentage) isTransaction_Commission() {}

func (m *Transaction) GetCommission() isTransaction_Commission {
	if m != nil {
		return m.Commission
	}
	return nil
}

func (m *Transaction) GetCommissionFixed() float64 {
	if x, ok := m.GetCommission().(*Transaction_CommissionFixed); ok {
		return x.CommissionFixed
	}
	return 0
}

func (m *Transaction) GetCommissionPercentage() float64 {
	if x, ok := m.GetCommission().(*Transaction_CommissionPercentage); ok {
		return x.CommissionPercentage
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Transaction) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Transaction_CommissionFixed)(nil),
		(*Transaction_CommissionPercentage)(nil),
	}
}

type Location struct {
	LocationId           uint64   `protobuf:"varint,1,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	Tower                string   `protobuf:"bytes,2,opt,name=tower,proto3" json:"tower,omitempty"`
	SubCommunity         string   `protobuf:"bytes,3,opt,name=sub_community,json=subCommunity,proto3" json:"sub_community,omitempty"`
	Community            string   `protobuf:"bytes,4,opt,name=community,proto3" json:"community,omitempty"`
	City                 string   `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Location) Reset()         { *m = Location{} }
func (m *Location) String() string { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()    {}
func (*Location) Descriptor() ([]byte, []int) {
	return fileDescriptor_489dcea0c2b7da12, []int{3}
}

func (m *Location) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Location.Unmarshal(m, b)
}
func (m *Location) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Location.Marshal(b, m, deterministic)
}
func (m *Location) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Location.Merge(m, src)
}
func (m *Location) XXX_Size() int {
	return xxx_messageInfo_Location.Size(m)
}
func (m *Location) XXX_DiscardUnknown() {
	xxx_messageInfo_Location.DiscardUnknown(m)
}

var xxx_messageInfo_Location proto.InternalMessageInfo

func (m *Location) GetLocationId() uint64 {
	if m != nil {
		return m.LocationId
	}
	return 0
}

func (m *Location) GetTower() string {
	if m != nil {
		return m.Tower
	}
	return ""
}

func (m *Location) GetSubCommunity() string {
	if m != nil {
		return m.SubCommunity
	}
	return ""
}

func (m *Location) GetCommunity() string {
	if m != nil {
		return m.Community
	}
	return ""
}

func (m *Location) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

type Party struct {
	AgentName            string   `protobuf:"bytes,1,opt,name=agent_name,json=agentName,proto3" json:"agent_name,omitempty"`
	AgentEmail           string   `protobuf:"bytes,2,opt,name=agent_email,json=agentEmail,proto3" json:"agent_email,omitempty"`
	ClientEmail          string   `protobuf:"bytes,3,opt,name=client_email,json=clientEmail,proto3" json:"client_email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Party) Reset()         { *m = Party{} }
func (m *Party) String() string { return proto.CompactTextString(m) }
func (*Party) ProtoMessage()    {}
func (*Party) Descriptor() ([]byte, []int) {
	return fileDescriptor_489dcea0c2b7da12, []int{4}
}

func (m *Party) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Party.Unmarshal(m, b)
}
func (m *Party) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Party.Marshal(b, m, deterministic)
}
func (m *Party) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Party.Merge(m, src)
}
func (m *Party) XXX_Size() int {
	return xxx_messageInfo_Party.Size(m)
}
func (m *Party) XXX_DiscardUnknown() {
	xxx_messageInfo_Party.DiscardUnknown(m)
}

var xxx_messageInfo_Party proto.InternalMessageInfo

func (m *Party) GetAgentName() string {
	if m != nil {
		return m.AgentName
	}
	return ""
}

func (m *Party) GetAgentEmail() string {
	if m != nil {
		return m.AgentEmail
	}
	return ""
}

func (m *Party) GetClientEmail() string {
	if m != nil {
		return m.ClientEmail
	}
	return ""
}

func init() {
	proto.RegisterEnum("pb.Transaction_Source", Transaction_Source_name, Transaction_Source_value)
	proto.RegisterEnum("pb.Transaction_Type", Transaction_Type_name, Transaction_Type_value)
	proto.RegisterEnum("pb.Transaction_Furnishing", Transaction_Furnishing_name, Transaction_Furnishing_value)
	proto.RegisterType((*CreateTransactionRequest)(nil), "pb.CreateTransactionRequest")
	proto.RegisterType((*CreateTransactionResponse)(nil), "pb.CreateTransactionResponse")
	proto.RegisterType((*Transaction)(nil), "pb.Transaction")
	proto.RegisterType((*Location)(nil), "pb.Location")
	proto.RegisterType((*Party)(nil), "pb.Party")
}

func init() { proto.RegisterFile("pb/transaction.proto", fileDescriptor_489dcea0c2b7da12) }

var fileDescriptor_489dcea0c2b7da12 = []byte{
	// 1055 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x96, 0x5d, 0x73, 0xda, 0x46,
	0x14, 0x86, 0x23, 0x1b, 0xbb, 0x70, 0xc4, 0x87, 0xbc, 0x21, 0xee, 0xc6, 0xb1, 0x6b, 0x4c, 0xeb,
	0x19, 0x3a, 0x99, 0x3a, 0xad, 0x3b, 0xbd, 0xe9, 0x9d, 0x8b, 0x4d, 0xc3, 0x04, 0x30, 0x23, 0xcc,
	0x74, 0x7c, 0x53, 0xcd, 0x22, 0x2d, 0x46, 0x19, 0x21, 0xa9, 0xbb, 0x2b, 0x27, 0xe4, 0x97, 0xf4,
	0xb7, 0xf6, 0xaa, 0xb3, 0x67, 0x25, 0x60, 0x9c, 0xe6, 0xa6, 0x77, 0xec, 0xf3, 0xbe, 0x7b, 0xf6,
	0x43, 0xe7, 0xec, 0x01, 0x9a, 0xe9, 0xec, 0x8d, 0x12, 0x2c, 0x96, 0xcc, 0x57, 0x61, 0x12, 0x5f,
	0xa4, 0x22, 0x51, 0x09, 0xd9, 0x49, 0x67, 0xed, 0x21, 0xd0, 0xae, 0xe0, 0x4c, 0xf1, 0xbb, 0x8d,
	0xec, 0xf2, 0xbf, 0x32, 0x2e, 0x15, 0xf9, 0x09, 0xec, 0xad, 0x49, 0xd4, 0x6a, 0x59, 0x1d, 0xfb,
	0xb2, 0x71, 0x91, 0xce, 0x2e, 0xb6, 0xcd, 0xdb, 0x9e, 0xf6, 0x08, 0x5e, 0xfe, 0x47, 0x38, 0x99,
	0x26, 0xb1, 0xe4, 0xff, 0x27, 0xde, 0x3f, 0x36, 0xd8, 0x5b, 0x22, 0x21, 0x50, 0x0a, 0x98, 0xe2,
	0x38, 0xb7, 0xe4, 0xe2, 0x6f, 0x72, 0x0a, 0x36, 0xff, 0xa8, 0xb8, 0x88, 0x59, 0xe4, 0x85, 0x01,
	0xdd, 0x41, 0x09, 0x0a, 0xd4, 0x0f, 0xc8, 0x05, 0xec, 0xcb, 0x24, 0x13, 0x3e, 0xa7, 0xbb, 0x2d,
	0xab, 0x53, 0xbf, 0x3c, 0x7c, 0xb2, 0xe4, 0xc5, 0x04, 0x55, 0x37, 0x77, 0x91, 0x0e, 0x94, 0xd4,
	0x2a, 0xe5, 0xb4, 0x84, 0xee, 0xe6, 0x53, 0xf7, 0xdd, 0x2a, 0xe5, 0x2e, 0x3a, 0xc8, 0x0f, 0x40,
	0x52, 0x91, 0xa4, 0x5c, 0xa8, 0x95, 0x27, 0xf8, 0x9c, 0x0b, 0x1e, 0xfb, 0x9c, 0x7e, 0xd5, 0xb2,
	0x3a, 0x15, 0xf7, 0xa0, 0x50, 0xdc, 0x42, 0x20, 0x4d, 0xd8, 0x4b, 0x45, 0xe8, 0x73, 0x5a, 0x6e,
	0x59, 0x1d, 0xcb, 0x35, 0x03, 0xf2, 0x06, 0x9e, 0x3f, 0x72, 0x11, 0xce, 0x43, 0x9f, 0xe9, 0xf8,
	0x9e, 0x54, 0x4c, 0x65, 0x92, 0x56, 0x30, 0x0a, 0xd9, 0x96, 0x26, 0xa8, 0x90, 0xef, 0xc1, 0x11,
	0xfc, 0x3d, 0xc7, 0xdd, 0x78, 0x82, 0x33, 0x99, 0xc4, 0x14, 0xd0, 0xdd, 0x58, 0x73, 0x17, 0xb1,
	0xbe, 0x1b, 0x13, 0x80, 0x07, 0x1e, 0x53, 0xd4, 0x36, 0x77, 0x53, 0xa0, 0x2b, 0x45, 0x7e, 0x05,
	0x98, 0x67, 0x22, 0x0e, 0xe5, 0x22, 0x8c, 0x1f, 0x68, 0x15, 0x4f, 0x7c, 0xf4, 0xf4, 0xc4, 0xbd,
	0xb5, 0xc3, 0xdd, 0x72, 0x93, 0x73, 0xa8, 0x07, 0xfc, 0x91, 0x47, 0xfa, 0x98, 0x5e, 0xcc, 0x96,
	0x9c, 0xd6, 0x70, 0x17, 0xb5, 0x35, 0x1d, 0xb1, 0x25, 0x27, 0x67, 0x50, 0xf5, 0x17, 0x3a, 0xa5,
	0x3c, 0x3f, 0xc9, 0x62, 0x45, 0xeb, 0xb8, 0x09, 0xdb, 0xb0, 0xae, 0x46, 0xe4, 0x5b, 0xa8, 0xcd,
	0x78, 0x20, 0x92, 0x64, 0x99, 0x7b, 0x1a, 0xe8, 0xa9, 0xe6, 0xd0, 0x98, 0xce, 0xa1, 0x3e, 0x63,
	0x6a, 0xb1, 0xe5, 0x72, 0xd0, 0x55, 0x2b, 0xa8, 0xb1, 0xb5, 0xa1, 0x36, 0xcb, 0xc2, 0x48, 0x79,
	0x59, 0xea, 0x31, 0xc1, 0x19, 0x3d, 0xc0, 0xcb, 0xb6, 0x11, 0x4e, 0xd3, 0x2b, 0xc1, 0x19, 0x79,
	0x05, 0x95, 0x34, 0x4a, 0x94, 0x27, 0xc3, 0x4f, 0x9c, 0x12, 0xd4, 0xcb, 0x1a, 0x4c, 0xc2, 0x4f,
	0x98, 0x4f, 0x59, 0x1c, 0x2a, 0x2f, 0xce, 0x96, 0x33, 0x2e, 0xe8, 0x73, 0x3c, 0x13, 0x68, 0x34,
	0x42, 0xa2, 0x0d, 0xf3, 0x28, 0x49, 0x84, 0x17, 0xe9, 0x73, 0xd2, 0xa6, 0x31, 0x20, 0x1a, 0x68,
	0x42, 0x3a, 0x50, 0x8e, 0x12, 0xf3, 0xc9, 0xe8, 0x0b, 0xcc, 0xf2, 0xaa, 0xbe, 0xd2, 0x41, 0xce,
	0xdc, 0xb5, 0xaa, 0x0f, 0xbe, 0x4e, 0x20, 0xcc, 0xb9, 0x43, 0x0c, 0x56, 0x2d, 0xa0, 0xce, 0x35,
	0x72, 0x06, 0xfb, 0x92, 0x47, 0x11, 0x17, 0xf4, 0x6b, 0x0c, 0x56, 0xd1, 0xc1, 0xc6, 0x4c, 0xa7,
	0x56, 0x2e, 0x90, 0x53, 0xd8, 0x9b, 0x65, 0x2b, 0x2e, 0x28, 0x7d, 0xea, 0x30, 0x9c, 0x9c, 0x43,
	0x39, 0x62, 0x71, 0x10, 0x25, 0x22, 0xa0, 0x2f, 0x9f, 0x7a, 0xd6, 0x92, 0x5e, 0x4a, 0xf1, 0x98,
	0xc5, 0x8a, 0x1e, 0x7d, 0xb6, 0x94, 0x11, 0xc8, 0x8f, 0xd0, 0x0c, 0xa5, 0xe7, 0x2f, 0x42, 0xbd,
	0xb0, 0x17, 0xc6, 0x7e, 0x94, 0xc9, 0xf0, 0x91, 0xd3, 0x57, 0x2d, 0xab, 0x53, 0x76, 0x49, 0x28,
	0xbb, 0x46, 0xea, 0x17, 0x0a, 0xf9, 0x0e, 0xea, 0x0b, 0x26, 0x3d, 0xa9, 0xb2, 0x60, 0xe5, 0xe9,
	0x0f, 0x45, 0x8f, 0xd1, 0x5b, 0x5d, 0x30, 0x39, 0xd1, 0xd0, 0x4d, 0x92, 0xa5, 0xfe, 0x6e, 0xda,
	0xb5, 0x64, 0x61, 0x60, 0x4c, 0x27, 0x68, 0xb2, 0x17, 0x4c, 0x0e, 0x59, 0x18, 0xa0, 0xa7, 0x09,
	0x7b, 0x8f, 0x21, 0xff, 0x20, 0xe9, 0x37, 0xad, 0xdd, 0x4e, 0xc5, 0x35, 0x03, 0x9d, 0x18, 0xa9,
	0x48, 0x74, 0xe2, 0x17, 0xb5, 0x73, 0x6a, 0xf2, 0x30, 0xa7, 0x79, 0xd9, 0xbc, 0x86, 0x03, 0x3f,
	0x89, 0x95, 0x60, 0xbe, 0xf2, 0x82, 0x4c, 0x98, 0xcf, 0xd3, 0x42, 0xa7, 0x53, 0x08, 0xd7, 0x39,
	0x27, 0xaf, 0xc1, 0xf1, 0x93, 0xe5, 0x32, 0x94, 0x52, 0x17, 0xd9, 0x3c, 0xfc, 0xc8, 0x03, 0x7a,
	0xa6, 0x13, 0xe5, 0xed, 0x33, 0xb7, 0xb1, 0x51, 0x7a, 0x5a, 0x20, 0xbf, 0xc0, 0x8b, 0x2d, 0x73,
	0xca, 0x85, 0xcf, 0x63, 0xc5, 0x1e, 0x38, 0x6d, 0xe7, 0x33, 0x9a, 0x1b, 0x79, 0xbc, 0x56, 0xdb,
	0x3e, 0xec, 0x9b, 0x97, 0x87, 0x10, 0xa8, 0x4f, 0x6e, 0xa7, 0x6e, 0xf7, 0xc6, 0x9b, 0x8e, 0xde,
	0x8d, 0x6e, 0xff, 0x18, 0x39, 0xcf, 0x48, 0x0d, 0x2a, 0x39, 0x1b, 0xf7, 0x1c, 0x8b, 0x38, 0x50,
	0xcd, 0x87, 0xc3, 0xfb, 0xae, 0x3b, 0x74, 0x76, 0x48, 0x13, 0x9c, 0xc2, 0xe0, 0xde, 0x8e, 0x27,
	0xe3, 0xab, 0xee, 0x8d, 0xb3, 0x4b, 0xea, 0x00, 0x39, 0xbd, 0x1e, 0x5c, 0x3b, 0xa5, 0xf6, 0x3b,
	0x28, 0x61, 0x12, 0x39, 0x50, 0xbd, 0xbb, 0x1f, 0x6f, 0x2f, 0x50, 0x90, 0x41, 0x7f, 0x72, 0xd7,
	0x1f, 0xfd, 0xee, 0x58, 0xa4, 0x0a, 0x65, 0x24, 0xc3, 0xdb, 0xa9, 0xb3, 0x43, 0x0e, 0xa0, 0x86,
	0xa3, 0xdb, 0x5e, 0xaf, 0xdf, 0xed, 0x5f, 0x0d, 0x9c, 0xdd, 0xf6, 0x9f, 0x00, 0x9b, 0xb7, 0x80,
	0x1c, 0x02, 0xc9, 0xa3, 0x79, 0xbd, 0xa9, 0x3b, 0xea, 0x4f, 0xde, 0xea, 0x30, 0xcf, 0x48, 0x03,
	0xec, 0xe9, 0x28, 0x27, 0x37, 0xd7, 0x8e, 0x85, 0xc7, 0xbb, 0x19, 0xf6, 0xbd, 0x0d, 0xdb, 0x21,
	0xcf, 0xa1, 0xd1, 0x9b, 0x0e, 0x06, 0xf7, 0x5b, 0x70, 0xf7, 0xb7, 0x2a, 0xc0, 0xe6, 0xa6, 0xda,
	0x7f, 0x5b, 0x50, 0x2e, 0x6a, 0x46, 0x17, 0x5d, 0x51, 0x35, 0xfa, 0x95, 0x37, 0x0d, 0x00, 0x0a,
	0xd4, 0x0f, 0x74, 0x6e, 0xa8, 0xe4, 0x03, 0x17, 0xd8, 0x00, 0x2a, 0xae, 0x19, 0xe8, 0x02, 0x93,
	0xd9, 0xcc, 0xd3, 0x51, 0x75, 0x05, 0xaf, 0xb0, 0x05, 0x54, 0xdc, 0xaa, 0xcc, 0x66, 0xdd, 0x82,
	0x91, 0x63, 0xa8, 0x6c, 0x0c, 0x25, 0x34, 0x6c, 0x80, 0xee, 0x39, 0xbe, 0x16, 0xf6, 0x50, 0xc0,
	0xdf, 0xed, 0xf7, 0xb0, 0x87, 0x55, 0x41, 0x4e, 0x00, 0xd8, 0x03, 0x8f, 0x95, 0x79, 0xff, 0x2c,
	0x33, 0x17, 0x09, 0xbe, 0x7d, 0xa7, 0x60, 0x1b, 0x99, 0x2f, 0x59, 0x18, 0xe5, 0x5b, 0x33, 0x33,
	0x6e, 0x34, 0xc1, 0xc7, 0x31, 0x0a, 0x37, 0x0e, 0xb3, 0x3d, 0xdb, 0x30, 0xb4, 0x5c, 0xce, 0x81,
	0x6c, 0x3d, 0xc6, 0x13, 0x2e, 0x1e, 0x75, 0xd7, 0x18, 0xc3, 0xc1, 0x67, 0x9d, 0x96, 0x1c, 0xeb,
	0x72, 0xfd, 0x52, 0x3f, 0x3f, 0x3a, 0xf9, 0x82, 0x6a, 0xda, 0xf3, 0x6c, 0x1f, 0xff, 0x15, 0xfc,
	0xfc, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7b, 0x9b, 0x8b, 0x36, 0x2d, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TransactionServiceClient is the client API for TransactionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TransactionServiceClient interface {
	CreateTransaction(ctx context.Context, in *CreateTransactionRequest, opts ...grpc.CallOption) (*CreateTransactionResponse, error)
}

type transactionServiceClient struct {
	cc *grpc.ClientConn
}

func NewTransactionServiceClient(cc *grpc.ClientConn) TransactionServiceClient {
	return &transactionServiceClient{cc}
}

func (c *transactionServiceClient) CreateTransaction(ctx context.Context, in *CreateTransactionRequest, opts ...grpc.CallOption) (*CreateTransactionResponse, error) {
	out := new(CreateTransactionResponse)
	err := c.cc.Invoke(ctx, "/pb.TransactionService/CreateTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TransactionServiceServer is the server API for TransactionService service.
type TransactionServiceServer interface {
	CreateTransaction(context.Context, *CreateTransactionRequest) (*CreateTransactionResponse, error)
}

// UnimplementedTransactionServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTransactionServiceServer struct {
}

func (*UnimplementedTransactionServiceServer) CreateTransaction(ctx context.Context, req *CreateTransactionRequest) (*CreateTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTransaction not implemented")
}

func RegisterTransactionServiceServer(s *grpc.Server, srv TransactionServiceServer) {
	s.RegisterService(&_TransactionService_serviceDesc, srv)
}

func _TransactionService_CreateTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionServiceServer).CreateTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.TransactionService/CreateTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionServiceServer).CreateTransaction(ctx, req.(*CreateTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TransactionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.TransactionService",
	HandlerType: (*TransactionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTransaction",
			Handler:    _TransactionService_CreateTransaction_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/transaction.proto",
}
