syntax = "proto3";

package pb;

service TransactionService {
    rpc CreateTransaction (CreateTransactionRequest) returns (CreateTransactionResponse);
};

message CreateTransactionRequest {
    Transaction transaction = 1;
}

message CreateTransactionResponse {
    Transaction transaction = 1;
}

message Transaction {
    uint64 date = 1;
    uint64 external_id = 2;

    enum Source {
        SOURCE_UNKNOWN = 0;
        SOURCE_PF = 1;
        SOURCE_MYCRM = 2;
        SOURCE_PROPSPACE = 3;
        SOURCE_DLD = 4;
    }
    Source source = 3;

    enum Type {
        TYPE_UNKNOWN = 0;
        TYPE_LISTING = 1;
        TYPE_MOU = 2;
        TYPE_OFFICIAL = 3;
    }

    Type type = 4;
    string property_reference = 7;
    double price = 8;
    string verification_status = 9;
    string rejection_reason = 10;
    uint64 verified_at = 11;

    enum Furnishing {
        UNKNOWN_FURNISHING = 0;
        UNFURNISHED = 1;
        SEMI_FURNISHED = 2;
        FULLY_FURNISHED = 3;
    }
    Furnishing furnishing = 12;
    string developer_name = 13;
    uint64 cheque_count = 14;
    uint64 bedroom_count = 15;
    uint64 bathroom_count = 16;
    double built_up_area = 17;
    double plot_size = 18;
    string unit_number = 19;
    string floor_level = 20;
    Location location = 21;
    string property_type = 22;
    Party seller = 23;
    Party buyer = 24;
    Party landlord = 25;
    Party tenant = 26;
    bool is_chiller_inclusive = 27;
    bool has_study_room = 28;
    bool has_maid_room = 29;
    repeated string views = 30;
    string project_status = 31;
    string contract_duration = 32;
    oneof commission {
        double commission_fixed = 33;
        double commission_percentage = 34;
    }
}

message Location {
    uint64 location_id = 1;
    string tower = 2;
    string sub_community = 3;
    string community = 4;
    string city = 5;
}

message Party {
    string agent_name = 1;
    string agent_email = 2;
    string client_email = 3;
}
